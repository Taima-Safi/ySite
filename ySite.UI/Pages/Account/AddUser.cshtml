@*@page
@model ySite.UI.Pages.Account.AddUserModel
@{
    ViewData["Title"] = "New User";
}

<div class="row">
    <div class="col-md-4">
        <form id="registerForm" method="post">
            <h2>Create a new account.</h2>
            <hr />
            <div class="form-floating mb-3">
                <input asp-for="UserCredential.Email" class="form-control" autocomplete="off" aria-required="true" placeholder="name@example.com" />
                <label asp-for="UserCredential.Email">Email</label>
                <span asp-validation-for="UserCredential.Email" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="UserCredential.Password" class="form-control" autocomplete="off" aria-required="true" placeholder="password"/>
                <label asp-for="UserCredential.Password">Password</label>
                <span asp-validation-for="UserCredential.Password" class="text-danger"></span>
            </div>
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
</div>
*@
@page
@model ySite.UI.Pages.Account.AddUserModel
@{
    ViewData["Title"] = "New User";
}

<div class="row">
    <div class="col-md-4">
        <form id="registerForm" method="post">
            <h2>Create a new account.</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="UserCredential.FirstName" class="form-control" autocomplete="off" aria-required="true" placeholder="Last Name" />
                <label asp-for="UserCredential.FirstName">First Name</label>
                <span asp-validation-for="UserCredential.FirstName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="UserCredential.LastName" class="form-control" autocomplete="off" aria-required="true" placeholder="Last Name" />
                <label asp-for="UserCredential.LastName">Last Name</label>
                <span asp-validation-for="UserCredential.LastName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="UserCredential.UserName" class="form-control" autocomplete="off" aria-required="true" placeholder="Username" />
                <label asp-for="UserCredential.UserName">Username</label>
                <span asp-validation-for="UserCredential.UserName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="UserCredential.Email" class="form-control" autocomplete="off" aria-required="true" placeholder="name@example.com" />
                <label asp-for="UserCredential.Email">Email</label>
                <span asp-validation-for="UserCredential.Email" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="UserCredential.PhoneNumber" class="form-control" autocomplete="off" aria-required="true" placeholder="Phone Number" />
                <label asp-for="UserCredential.PhoneNumber">Phone Number</label>
                <span asp-validation-for="UserCredential.PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="UserCredential.Password" class="form-control" autocomplete="off" aria-required="true" placeholder="password"/>
                <label asp-for="UserCredential.Password">Password</label>
                <span asp-validation-for="UserCredential.Password" class="text-danger"></span>
            </div>
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
</div>
<script>
    document.getElementById('registerForm').addEventListener('submit', async (event) => {
        event.preventDefault(); // Prevents the default form submission

        const formData = new FormData(event.target);
        const data = Object.fromEntries(formData.entries());

        try {
            const response = await fetch('https://localhost:7200/api/Auth/Register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            if (response.ok) {
                // Registration successful
                const data = await response.json(); // Assuming the response contains JSON data

                // Log the received data or object
                console.log('Response Data:', data);
                // Redirect or perform actions as needed
            } else {
                // Registration failed
                console.error('Registration failed.');
            }
        } catch (error) {
            // Handle network errors or other exceptions
            console.error('Error:', error);
        }
    });

</script>